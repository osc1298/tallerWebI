<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/tx	
						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-4.3.xsd">

	<import resource="classpath:hibernateContext.xml" />

	<!--Se indica que la configuracion del MVC se hará utilizanbdo anotaciones -->
	<mvc:annotation-driven />


	<!--Se indica que el transaction manager a utilizar en la capa de servicios 
		es el bean declarado en hibernateContext.xml -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--Se indican qué paquetes debe escanear Spring al levantar el contexto 
		para encontrar componentes, -->
	<!--esto es clases anotadas como @Controller, @Service o @Repository -->
	<context:component-scan base-package="ar.edu.unlam.tallerweb1.controladores" />
	<context:component-scan base-package="ar.edu.unlam.tallerweb1.configuration" />
	<context:component-scan base-package="ar.edu.unlam.tallerweb1.repositorios" />
	<context:component-scan base-package="ar.edu.unlam.tallerweb1.servicios" />

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>image/jpeg</value>
						<value>image/png</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="20848820" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="tallerweb1.unlam2020@gmail.com" />
		<property name="password" value="Tallerweb1234" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>

	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
			</props>
		</property>
	</bean>

	<bean id="myBeansValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<mvc:annotation-driven validator="myBeansValidator" />

	<task:annotation-driven executor="taskExecutor" />
	<task:executor id="taskExecutor" pool-size="5" />

</beans>